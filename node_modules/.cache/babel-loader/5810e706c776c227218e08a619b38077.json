{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wchri\\\\Web\\\\CastoryCases\\\\src\\\\Components\\\\PhoneCanvas.js\";\nimport React from 'react';\nimport LoadingPhone from './LoadingPhone';\nimport \"./styles/PhoneCanvas.css\";\nimport { blobToBase64 } from './../util';\n\nclass PhoneCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      widgets: [],\n      loaded: false\n    };\n    this.canvas = React.createRef();\n  }\n\n  render() {\n    var _this$props$width, _this$props$height, _this$props$width2, _this$props$height2;\n\n    if (this.canvasContext != undefined) this.paint();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      width: (_this$props$width = this.props.width) !== null && _this$props$width !== void 0 ? _this$props$width : 700,\n      height: (_this$props$height = this.props.height) !== null && _this$props$height !== void 0 ? _this$props$height : 700,\n      className: \"phone-canvas_Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvas,\n      className: \"phone-canvas\",\n      width: (_this$props$width2 = this.props.width) !== null && _this$props$width2 !== void 0 ? _this$props$width2 : 700,\n      height: (_this$props$height2 = this.props.height) !== null && _this$props$height2 !== void 0 ? _this$props$height2 : 700,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }), !this.state.loaded && /*#__PURE__*/React.createElement(LoadingPhone, {\n      className: \"loadingPhone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 40\n      }\n    }));\n  }\n\n  async componentDidMount() {\n    this.canvasContext = this.canvas.current.getContext('2d');\n    this.canvasContext.center = [this.canvas.current.width / 2, this.canvas.current.height / 2];\n    let img;\n    await fetch(this.props.mask).then(response => response.blob()).then(images => img = images);\n    await blobToBase64(img).then(data => {\n      this.mask = new Image();\n\n      this.mask.onload = () => {\n        this.mask.position = [0, 0]; //[-this.mask.width / 2, -this.mask.height / 2]\n\n        this.paint();\n      };\n\n      this.mask.src = data;\n    });\n    console.log(this.mask);\n    await fetch(this.props.case).then(response => response.blob()).then(images => img = images);\n    await blobToBase64(img).then(data => {\n      this.case = new Image();\n\n      this.case.onload = () => {\n        this.case.position = [0, 0]; //[-this.case.width / 2, -this.case.height / 2]\n\n        this.paint();\n      };\n\n      this.case.src = data;\n    });\n    this.paint();\n    this.setState({\n      loaded: true\n    });\n  }\n\n  paint() {\n    if (this.canvasContext) {\n      this.canvasContext.fillStyle = 'rgb(160, 160, 160)';\n      this.canvasContext.fillRect(0, 0, this.canvas.current.width, this.canvas.current.width);\n      this.canvasContext.moveTo(Math.floor(this.canvas.current.width / 2), Math.floor(this.canvas.current.height / 2));\n      this.mask && this.drawImage(this.mask, this.mask.position[0], this.mask.position[1]);\n      this.case && this.drawImage(this.case, this.mask.position[0], this.mask.position[1]);\n    }\n  }\n\n  drawImage(img, position, size) {\n    if (this.position == null) return this.canvasContext.drawImage(this.img, this.canvasContext.center[0], this.canvasContext.center[1]);\n    if (size != null) this.canvasContext.drawImage(this.img, this.canvasContext.center[0] + position[0], this.canvasContext.center[1] + position[1]);else this.canvasContext.drawImage(this.img, this.canvasContext.center[0] + position[0], this.canvasContext.center[1] + position[1]);\n  }\n\n}\n\nexport default PhoneCanvas;","map":{"version":3,"sources":["C:/Users/wchri/Web/CastoryCases/src/Components/PhoneCanvas.js"],"names":["React","LoadingPhone","blobToBase64","PhoneCanvas","Component","constructor","props","state","widgets","loaded","canvas","createRef","render","canvasContext","undefined","paint","width","height","componentDidMount","current","getContext","center","img","fetch","mask","then","response","blob","images","data","Image","onload","position","src","console","log","case","setState","fillStyle","fillRect","moveTo","Math","floor","drawImage","size"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport LoadingPhone from './LoadingPhone';\r\nimport \"./styles/PhoneCanvas.css\"\r\nimport { blobToBase64 } from './../util';\r\nclass PhoneCanvas extends React.Component{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            widgets: [],\r\n            loaded: false\r\n        }\r\n        this.canvas = React.createRef();\r\n    }\r\n\r\n    render(){\r\n        if(this.canvasContext != undefined) this.paint();\r\n        return (\r\n            <div width={this.props.width ?? 700} height={this.props.height ?? 700} className=\"phone-canvas_Container\">\r\n                <canvas ref={this.canvas} className=\"phone-canvas\" width={this.props.width ?? 700} height={this.props.height ?? 700}>\r\n                </canvas>\r\n                {!this.state.loaded && <LoadingPhone className=\"loadingPhone\"></LoadingPhone>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    async componentDidMount(){\r\n        this.canvasContext = this.canvas.current.getContext('2d')\r\n        this.canvasContext.center = [this.canvas.current.width / 2, this.canvas.current.height / 2]\r\n        let img;\r\n        await fetch(this.props.mask)\r\n        .then(response => response.blob())\r\n        .then(images => img = images)\r\n        await blobToBase64(img).then(data => {\r\n            this.mask = new Image(); \r\n            this.mask.onload = () => {\r\n                this.mask.position = [0,0]//[-this.mask.width / 2, -this.mask.height / 2]\r\n                this.paint();\r\n            }\r\n            this.mask.src = data;\r\n        })\r\n        console.log(this.mask)\r\n        await fetch(this.props.case)\r\n        .then(response => response.blob())\r\n        .then(images => img = images)\r\n        await blobToBase64(img).then(data => {\r\n            this.case = new Image(); \r\n            this.case.onload = ()=>{\r\n                this.case.position = [0,0]//[-this.case.width / 2, -this.case.height / 2]\r\n                this.paint(); \r\n            }\r\n            this.case.src = data;\r\n        })\r\n        this.paint()\r\n        this.setState({loaded:true})\r\n    }\r\n    \r\n    paint(){\r\n        if(this.canvasContext){\r\n            this.canvasContext.fillStyle = 'rgb(160, 160, 160)';\r\n            this.canvasContext.fillRect(0, 0, this.canvas.current.width, this.canvas.current.width);\r\n            this.canvasContext.moveTo(Math.floor(this.canvas.current.width / 2), Math.floor(this.canvas.current.height / 2))\r\n            this.mask && this.drawImage(this.mask,this.mask.position[0],this.mask.position[1]);\r\n            this.case && this.drawImage(this.case,this.mask.position[0],this.mask.position[1]);\r\n        }\r\n    }\r\n\r\n    drawImage(img, position, size){\r\n        if (this.position == null)\r\n            return this.canvasContext.drawImage(this.img, this.canvasContext.center[0], this.canvasContext.center[1]);\r\n        \r\n        if(size != null)\r\n            this.canvasContext.drawImage(this.img, this.canvasContext.center[0] + position[0], this.canvasContext.center[1] + position[1])\r\n        else\r\n            this.canvasContext.drawImage(this.img, this.canvasContext.center[0] + position[0], this.canvasContext.center[1] + position[1])\r\n    }\r\n\r\n}\r\n\r\nexport default PhoneCanvas;"]},"metadata":{},"sourceType":"module"}
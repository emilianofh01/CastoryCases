{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wchri\\\\Web\\\\CastoryCases\\\\src\\\\Components\\\\PhoneCanvas.js\";\nimport React from 'react';\nimport LoadingPhone from './LoadingPhone';\nimport \"./styles/PhoneCanvas.css\";\n\nclass PhoneCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      widgets: [],\n      loaded: false\n    };\n    this.canvas = React.createRef();\n  }\n\n  render() {\n    var _this$props$width, _this$props$height, _this$props$width2, _this$props$height2;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      width: (_this$props$width = this.props.width) !== null && _this$props$width !== void 0 ? _this$props$width : 700,\n      height: (_this$props$height = this.props.height) !== null && _this$props$height !== void 0 ? _this$props$height : 700,\n      className: \"phone-canvas_Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvas,\n      className: \"phone-canvas\",\n      width: (_this$props$width2 = this.props.width) !== null && _this$props$width2 !== void 0 ? _this$props$width2 : 700,\n      height: (_this$props$height2 = this.props.height) !== null && _this$props$height2 !== void 0 ? _this$props$height2 : 700,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }), !this.state.loaded && /*#__PURE__*/React.createElement(LoadingPhone, {\n      className: \"loadingPhone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 40\n      }\n    }));\n  }\n\n  async componentDidMount() {\n    this.canvasContext = this.canvas.current.getContext('2d');\n    this.paint();\n    this.mask = await fetch(this.props.mask).then(response => response.blob()).then(data => {\n      console.log('Success:', data);\n    });\n    console.log(this.mask);\n    this.case = await fetch(this.props.case).then(response => response).then(data => {\n      console.log('Success:', data);\n    });\n    console.log(this.case);\n  }\n\n  paint() {\n    if (this.canvasContext) {\n      this.canvasContext.fillStyle = 'rgb(160, 160, 160)';\n      this.canvasContext.fillRect(0, 0, this.canvas.current.width, this.canvas.current.width); //this.props.mask ?? this.canvasContext.\n    }\n  }\n\n}\n\nexport default PhoneCanvas;","map":{"version":3,"sources":["C:/Users/wchri/Web/CastoryCases/src/Components/PhoneCanvas.js"],"names":["React","LoadingPhone","PhoneCanvas","Component","constructor","props","state","widgets","loaded","canvas","createRef","render","width","height","componentDidMount","canvasContext","current","getContext","paint","mask","fetch","then","response","blob","data","console","log","case","fillStyle","fillRect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,0BAAP;;AACA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAAyC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,MAAM,EAAE;AAFC,KAAb;AAIA,SAAKC,MAAL,GAAcT,KAAK,CAACU,SAAN,EAAd;AACH;;AAEDC,EAAAA,MAAM,GAAE;AAAA;;AACJ,wBACI;AAAK,MAAA,KAAK,uBAAE,KAAKN,KAAL,CAAWO,KAAb,iEAAsB,GAAhC;AAAqC,MAAA,MAAM,wBAAE,KAAKP,KAAL,CAAWQ,MAAb,mEAAuB,GAAlE;AAAuE,MAAA,SAAS,EAAC,wBAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,GAAG,EAAE,KAAKJ,MAAlB;AAA0B,MAAA,SAAS,EAAC,cAApC;AAAmD,MAAA,KAAK,wBAAE,KAAKJ,KAAL,CAAWO,KAAb,mEAAsB,GAA9E;AAAmF,MAAA,MAAM,yBAAE,KAAKP,KAAL,CAAWQ,MAAb,qEAAuB,GAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGK,CAAC,KAAKP,KAAL,CAAWE,MAAZ,iBAAsB,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH3B,CADJ;AAOH;;AAED,QAAMM,iBAAN,GAAyB;AACrB,SAAKC,aAAL,GAAqB,KAAKN,MAAL,CAAYO,OAAZ,CAAoBC,UAApB,CAA+B,IAA/B,CAArB;AACA,SAAKC,KAAL;AACA,SAAKC,IAAL,GAAY,MAAMC,KAAK,CAAC,KAAKf,KAAL,CAAWc,IAAZ,CAAL,CAAuBE,IAAvB,CAA4BC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAxC,EACjBF,IADiB,CACZG,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,IAAxB;AACD,KAHiB,CAAlB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,IAAjB;AACA,SAAKQ,IAAL,GAAY,MAAMP,KAAK,CAAC,KAAKf,KAAL,CAAWsB,IAAZ,CAAL,CAAuBN,IAAvB,CAA4BC,QAAQ,IAAIA,QAAxC,EACjBD,IADiB,CACZG,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,IAAxB;AACD,KAHiB,CAAlB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,IAAjB;AACH;;AAEDT,EAAAA,KAAK,GAAE;AACH,QAAG,KAAKH,aAAR,EAAsB;AAClB,WAAKA,aAAL,CAAmBa,SAAnB,GAA+B,oBAA/B;AACA,WAAKb,aAAL,CAAmBc,QAAnB,CAA4B,CAA5B,EAA+B,CAA/B,EAAkC,KAAKpB,MAAL,CAAYO,OAAZ,CAAoBJ,KAAtD,EAA6D,KAAKH,MAAL,CAAYO,OAAZ,CAAoBJ,KAAjF,EAFkB,CAGlB;AACH;AACJ;;AA3CoC;;AA8CzC,eAAeV,WAAf","sourcesContent":["import React from 'react';\r\nimport LoadingPhone from './LoadingPhone';\r\nimport \"./styles/PhoneCanvas.css\"\r\nclass PhoneCanvas extends React.Component{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            widgets: [],\r\n            loaded: false\r\n        }\r\n        this.canvas = React.createRef();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div width={this.props.width ?? 700} height={this.props.height ?? 700} className=\"phone-canvas_Container\">\r\n                <canvas ref={this.canvas} className=\"phone-canvas\" width={this.props.width ?? 700} height={this.props.height ?? 700}>\r\n                </canvas>\r\n                {!this.state.loaded && <LoadingPhone className=\"loadingPhone\"></LoadingPhone>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    async componentDidMount(){\r\n        this.canvasContext = this.canvas.current.getContext('2d')\r\n        this.paint();\r\n        this.mask = await fetch(this.props.mask).then(response => response.blob())\r\n        .then(data => {\r\n          console.log('Success:', data);\r\n        });\r\n        console.log(this.mask)\r\n        this.case = await fetch(this.props.case).then(response => response)\r\n        .then(data => {\r\n          console.log('Success:', data);\r\n        });\r\n        console.log(this.case)\r\n    }\r\n\r\n    paint(){\r\n        if(this.canvasContext){\r\n            this.canvasContext.fillStyle = 'rgb(160, 160, 160)';\r\n            this.canvasContext.fillRect(0, 0, this.canvas.current.width, this.canvas.current.width);\r\n            //this.props.mask ?? this.canvasContext.\r\n        }\r\n    }\r\n}\r\n\r\nexport default PhoneCanvas;"]},"metadata":{},"sourceType":"module"}